#include <iostream>
#include <vector>

class Tree {
public:
    virtual void draw() = 0;
};

class PineTree : public Tree {
public:
    void draw() override {
        std::cout << "  *\n ***\n*****\n ***\n" << std::endl;
    }
};

class ChristmasTree : public Tree {
public:
    void draw() override {
        std::cout << "  /\\\n /\\/\\" << std::endl;
    }
};

class PalmTree : public Tree {
public:
    void draw() override {
        std::cout << "  /\\\n /++\\" << std::endl;
    }
};

int main() {
    std::vector<Tree*> trees = {new PineTree(), new ChristmasTree(), new PalmTree()};

    for (auto& tree : trees) {
        tree->draw();
        std::cout << std::endl;
    }

    for (auto& tree : trees) {
        delete tree;
    }

    return 0;
}
